//
//  BooksPresenter.swift
//  VIPERSample
//
//  Created User on 9/3/19.
//  Copyright © 2019 User. All rights reserved.
//
//  This file was generated by the ♻️ RMVIPER generator
//

import UIKit

class BooksPresenter: BooksPresenterProtocol
{
    weak var view: BooksViewControllerProtocol?
    var interactor: BooksInteractorInputProtocol?
    var wireFrame: BooksWireframeProtocol?
    var genre: Genre?
    
    func viewDidLoad()
    {
        view?.setupView()
        view?.updateTitle(genre?.name ?? "Unknown")
    }
    
    func refreshAllData()
    {
        view?.reloadData()
        executeAfter(seconds: 0.3) { [weak self] in
            self?.view?.hideLoading()
        }
    }
    
    func numberOfCells() -> Int
    {
        return genre?.books.count ?? 0
    }
    
    func cellViewModel(index indexPath: IndexPath) -> Book?
    {
        guard let genre = genre, genre.books.indices.contains(indexPath.row) else
        {
            return nil
        }
        let book = genre.books[indexPath.row]
        return book
    }
}

extension BooksPresenter: BooksInteractorOutputProtocol
{
    
}
