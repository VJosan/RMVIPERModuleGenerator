//
//  BooksViewController.swift
//  VIPERSample
//
//  Created User on 9/3/19.
//  Copyright © 2019 User. All rights reserved.
//
//  This file was generated by the ♻️ RMVIPER generator
//

import UIKit

class BooksViewController: RefreshableViewController, StoryboardInstantiable
{
    static var storyboardName: String = "Books"
    var presenter: BooksPresenterProtocol?
    
    // MARK: Outlets
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: Life Cycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        presenter?.viewDidLoad()
    }
    
    override func refresh()
    {
        super.refresh()
        presenter?.refreshAllData()
    }
}

// MARK: Presenter Output
extension BooksViewController: BooksViewControllerProtocol
{
    func setupView()
    {
        tableView.hideEmptyCells()
        addRefreshControl(to: tableView)
    }
    
    func showLoading()
    {
        startRefreshAnimation()
    }
    
    func hideLoading()
    {
        stopRefreshAnimation()
    }
    
    func reloadData()
    {
        tableView.reloadData()
    }
    
    func updateTitle(_ title: String)
    {
        self.title = title
    }
}

// MARK: UITableViewDataSource
extension BooksViewController: UITableViewDataSource
{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return presenter?.numberOfCells() ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let cell: BookCell = tableView.dequeueReusableCell(for: indexPath)
        if let cellModel = presenter?.cellViewModel(index: indexPath)
        {
            cell.setupBook(cellModel)
        }
        return cell
    }
}

// MARK: UITableViewDelegate
extension BooksViewController: UITableViewDelegate
{
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
    {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
