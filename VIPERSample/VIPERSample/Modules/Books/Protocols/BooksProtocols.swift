//
//  BooksProtocols.swift
//  VIPERSample
//
//  Created User on 9/3/19.
//  Copyright © 2019 User. All rights reserved.
//
//  This file was generated by the ♻️ RMVIPER generator
//

import UIKit

//VIEW
protocol BooksViewControllerProtocol: class
{
    var presenter: BooksPresenterProtocol? { get set }
    
    // PRESENTER -> VIEW
    func setupView()
    func reloadData()
    func showLoading()
    func hideLoading()
    func updateTitle(_ title: String)
}

//INTERACTOR
protocol BooksInteractorInputProtocol: class
{
    var presenter: BooksInteractorOutputProtocol? { get set }
    
    // PRESENTER -> INTERACTOR
    
}

protocol BooksInteractorOutputProtocol: class
{
    // INTERACTOR -> PRESENTER
    
}

//PRESENTER
protocol BooksPresenterProtocol: class
{
    var view: BooksViewControllerProtocol? { get set }
    var interactor: BooksInteractorInputProtocol? { get set }
    var wireFrame: BooksWireframeProtocol? { get set }
    var genre: Genre? { get set }
    
    // VIEW -> PRESENTER
    func viewDidLoad()
    func refreshAllData()
    func numberOfCells() -> Int
    func cellViewModel(index indexPath: IndexPath) -> Book?
}

//ROUTER
protocol BooksWireframeProtocol: class
{
    
}
